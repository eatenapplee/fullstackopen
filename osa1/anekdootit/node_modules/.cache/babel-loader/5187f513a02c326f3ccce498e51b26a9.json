{"ast":null,"code":"var _jsxFileName = \"/Users/eatenapplee/Documents/FullStackOpen/fullstackopen/osa1/anekdootit/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.text);\n};\n\nconst StatisticsLine = props => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, props.text, \" \", props.value);\n\nconst Statistics = props => {\n  if (props.good === 0 && props.bad === 0 && props.neutral === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"No feedback given\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"good\",\n      value: props.good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"neutral\",\n      value: props.neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"bad\",\n      value: props.bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"all\",\n      value: props.good + props.bad + props.neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"average\",\n      value: (props.good * 1 + props.bad * -1 + props.neutral * 0) / (props.good + props.bad + props.neutral),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StatisticsLine, {\n      text: \"positive\",\n      value: props.good / (props.good + props.bad + props.neutral) * 100 + \"%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })))));\n  }\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleClickNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleClickBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/eatenapplee/Documents/FullStackOpen/fullstackopen/osa1/anekdootit/src/index.js"],"names":["React","useState","ReactDOM","Button","props","onClick","text","StatisticsLine","value","Statistics","good","bad","neutral","App","setGood","setNeutral","setBad","handleClickGood","handleClickNeutral","handleClickBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  return(\n    <button onClick={props.onClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst StatisticsLine = (props) => (\n  <p>{props.text} {props.value}</p>\n)\n\nconst Statistics = (props) => {\n  if (props.good === 0 && props.bad === 0 && props.neutral === 0) {\n    return(\n      <div>\n        <p>No feedback given</p>\n      </div>\n    )\n  } else {\n      return(\n        <table>\n          <tbody>\n          <tr>\n            <td><StatisticsLine text=\"good\" value={props.good} /></td>\n          </tr>\n          <tr>\n            <td><StatisticsLine text=\"neutral\" value={props.neutral} /></td>\n          </tr>\n          <tr>\n            <td><StatisticsLine text=\"bad\" value={props.bad} /></td>\n          </tr>\n          <tr>\n            <td><StatisticsLine text=\"all\" value={props.good + props.bad + props.neutral} /></td>\n          </tr>\n          <tr>\n            <td><StatisticsLine text=\"average\" value={((props.good*1) + (props.bad*-1) + (props.neutral*0)) / (props.good + props.bad + props.neutral)} /></td>\n          </tr>\n          <tr>\n            <td><StatisticsLine text=\"positive\" value={props.good / (props.good + props.bad + props.neutral) * 100 + \"%\"}  /></td>\n          </tr>\n          </tbody>\n        </table>\n      )\n\n  }\n\n}\n\n\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleClickGood = () => {\n    setGood(good + 1);\n  }\n\n  const handleClickNeutral = () => {\n    setNeutral(neutral + 1);\n  }\n\n  const handleClickBad = () => {\n    setBad(bad + 1);\n  }\n\n\n\n  return (\n    <div>\n      <div>\n        <h1>give feedback</h1>\n        <Button onClick={handleClickGood} text=\"good\" />\n        <Button onClick={handleClickNeutral} text=\"neutral\" />\n        <Button onClick={handleClickBad} text=\"bad\" />\n      </div>\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}